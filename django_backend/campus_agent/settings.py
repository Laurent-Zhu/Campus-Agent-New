"""
Django settings for campus_agent project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
from datetime import timedelta 

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = "django-insecure-^*4l!c&^_tf0*5pa7myw+8k09b&1!4c9u9riruk8t$y62x#13d"
SECRET_KEY = "494a4b86c51b7a61a55d42306ca556f2402bf801340685e0ac398261291ea38e"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "rest_framework",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django_filters",
    'drf_spectacular',
    'student',
    'teacher',
    'administor',
    'core',
    'corsheaders',
    'student.exercises',
    # 'fastapi_user_mapping',

]


REST_FRAMEWORK = {
    # 用于生成API文档
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
    'DEFAULT_AUTHENTICATION_CLASSES': [],  # 关键：禁用全局 DRF 认证

    # 用于用户认证
    # 'DEFAULT_AUTHENTICATION_CLASSES': [
    #     'rest_framework_simplejwt.authentication.JWTAuthentication',
    # ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'campus_agent.authentication.FastAPIAuthBackend',
    ]
}

JWT_SECRET = '494a4b86c51b7a61a55d42306ca556f2402bf801340685e0ac398261291ea38e'
JWT_ALGORITHM = 'HS256'     
# SIMPLE_JWT = {
#     'ACCESS_TOKEN_LIFETIME': timedelta(minutes=30),
#     'AUTH_HEADER_TYPES': ('Bearer',),
#     'SIGNING_KEY': SECRET_KEY,  # 默认使用 SECRET_KEY
#     'ALGORITHM': 'HS256',  
# }

SPECTACULAR_SETTINGS = {
    'TITLE': '校园智能代理系统 API',
    'DESCRIPTION': '学生练习和评估系统接口文档',
    'VERSION': '1.0.0',
    'SERVE_INCLUDE_SCHEMA': False,
    'COMPONENT_SPLIT_REQUEST': True,  # 支持文件上传
}

# JWT配置与FastAPI一致
FASTAPI_JWT = {
    'SECRET_KEY': "your-production-secret-key",  # 用于签名和验证 JWT 的密钥
    'ALGORITHM': 'HS256',                 # JWT 使用的签名算法
    'USER_ID_FIELD': 'sub',  # JWT payload 中存储用户ID的字段名
    'USER_ID_CLAIM': 'sub',  # 声明从哪个字段获取用户身份信息
    'ROLE_CLAIM': 'role',    # 指定 JWT payload 中存储用户角色的字段名
    'AUTH_HEADER_TYPES': ('Bearer',),  # 指定认证头类型
}    


MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware", # Django原生认证
    'core.middleware.fastapi_auth.FastAPIAuthMiddleware',
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "django_backend.core.middleware.JWTAuthenticationMiddleware",
]

CORS_ALLOW_ALL_ORIGINS = True # 允许所有源访问
ROOT_URLCONF = "campus_agent.urls"

# 允许访问的请求头
CORS_ALLOW_HEADERS = [
    "accept",
    "accept-encoding",
    "authorization",
    "content-type",
    "dnt",
    "origin",
    "user-agent",
    "x-csrftoken",
    "x-requested-with",
    "x-request-id",  # 关键：允许前端发送的 x-request-id 头
]

FASTAPI_AUTH_VALIDATE_URL = 'http://localhost:8000/api/v1/auth/validate'  # FastAPI的token验证接口





TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "campus_agent.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
        # "NAME": 'D:\\Desktop\\campus-agent\\backend\\campus_agent.db',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# AUTH_USER_MODEL = 'fastapi_user_mapping.User'

# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')



LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
        },
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'debug.log'),
            'formatter': 'verbose',
        },
    },
    'root': {
        'handlers': ['console', 'file'],
        'level': 'INFO',
    },
    'loggers': {
        'django': {
            'handlers': ['console', 'file'],
            'level': 'INFO',
            'propagate': False,
        },
        'core': {
            'handlers': ['console', 'file'],
            'level': 'DEBUG',
            'propagate': False,
        },
        'student': {
            'handlers': ['console', 'file'],
            'level': 'DEBUG',
            'propagate': False,
        },
        'student.exercises': {
            'handlers': ['console', 'file'],
            'level': 'DEBUG',
            'propagate': False,
        },
        'teacher': {
            'handlers': ['console', 'file'],
            'level': 'DEBUG',
            'propagate': False,
        },
    },
}


LLM_MODEL_TYPE = "zhipu"
ZHIPUAI_API_KEY = "68b5a98b151f4a858dbec47ea6a75036.Xjgu3B8RdfL5HZz3"  # 从智谱AI平台获取
ZHIPUAI_MODEL_NAME = "glm-4"




